blueprint:
  name: Match Lighting
  domain: automation
  input:
    source:
      name: Trigger Source
      selector:
        entity:
          domain: 
          - light 
          - binary_sensor
    target_light:
      name: Target Light
      selector:
        target:
          entity:
            domain: 
            - light
            - switch
trigger:
  - entity_id: !input source
    platform: state
    attribute: brightness
    id: brightness
  - platform: state
    attribute: contact
    entity_id: !input source
    id: contact
action:
- choose:
  - conditions:
    - condition: trigger
      id: brightness
    sequence:
    - data_template:
        brightness: '{{ trigger.to_state.attributes.brightness or 0 }}'
      service: light.turn_on
      target: !input target_light
    - if:
      - condition: numeric_state
        entity_id: !input source
        attribute: brightness
        above: 150
      then:
      - service: switch.turn_on
        target: !input target_light
      else:
      - service: switch.turn_off
        target: !input target_light
